import { useState, useEffect, useRef } from "react";
import { useHistory, useParams } from "react-router"

const Projects = () => {
    const {id} = useParams();
    const history = useHistory();
    const [system, setSystem] = useState(null);
    const subscribe = useRef(false);

    useEffect(() => {
        subscribe.current = true;

        if(id === "queuing" && subscribe.current){
            setSystem([{
                item: "Queuing System",
                description: "This system has been developed to cater the visitors of our office, basically it generates a number which the visitor presents. The registration was in the lobby of our office, thereâ€™s a staff there whoâ€™s going to input the visitors information. Once registered the system will print a receipt which has the Queuing number and inputted information.  Then the visitor needs to wait for his/her number to appear on the TV screen before proceeding. It is a web based system which I developed using ASP.NET MVC, HTML, CSS, Javascript, Bootstrap and jQuery. I also use Google Chromeâ€™s Kiosk feature to automatically print the receipt on the thermal printer."
            }]);
        }
        else if(id === "preventivemaintenance" && subscribe.current){
            setSystem([{
                item: "Preventive Maintenance System",
                description: "Itâ€™s a web based system developed to record computer specs of our office, it is needed to identify the total working oneâ€™s and the ones who need to be replaced. It generates reports based on department, divisions, or computer parts. It is like an inventory system but for computers only."
            }]);
        }
        else if(id === "cif" && subscribe.current){
            setSystem([{
                item: "Case Investigation Form",
                description: "This is a web based system that aims to register clients for their swabbing schedule. The client needs to input important information and then once completed the system will notify the swabbers thru email or by the client's copy of CIF that has been generated by the system."
            }]);
        }
        else if (id === "wish" && subscribe.current){
            setSystem([{
                item: "Web Integrated System for Health",
                description: "This system has already been developed by the previous developers, meaning before I get hired this system has already been done. I only maintain this system based on the user's wants, needs or some feature addition and improvement. It is a web based system consisting of different systems integrated into one, these systems are Employee Portal, Inventory System, Document Tracking System, and Document Management and Archiving System."
            }]);
        }
        else if (id === "kmits" && subscribe.current){
            setSystem([{
                item: "KMITS System",
                description: "A web based system that has also already been developed. This system is for our Records department. It is for handling documents that are already in our office, this system is also connected to the Document Tracking System that handles the incoming documents. I only maintain this system for error complaints and feature addition and improvement."
            }]);
        }
        else if(id === "idsystem" && subscribe.current){
            setSystem([{
                item: "ID System",
                description: "A web based system that I developed to handle the user ID registration and generation. I used ASP.NET MVC, HTML, CSS, Javascript, Bootstrap and jQuery, just like on my other project/systems that I developed. This system generates an ID template that is ready to print and based on the user registration. These users are employees of our office."
            }]);
        }
        else{
            setSystem([{
                item: "Hmmm, that was odd!",
                description: "ðŸ¤”ðŸ¤”ðŸ¤”ðŸ¤”ðŸ¤”ðŸ¤”ðŸ¤”ðŸ¤”ðŸ¤”ðŸ¤”"
            }]);
        }

        return () => subscribe.current = false;
    }, [id]);

    const goBack = () => {
        history.push("/");
    }

    return (
        <div className="container projects-container">
            <div className="row">
                <div className="col-xl-3">

                </div>
                <div className="col-xl-6">
                    {
                        system && system.map((data) => (
                                        <div key={data.item}>
                                            <p className="fs-1 fst-italic title-container">{data.item}</p>
                
                                            <p className="project-desc-container">{data.description}</p>
                                        </div>
                                    ))
                    }
                    
                    <div className="text-center">
                        <button onClick={() => goBack() } className="btn btn-dark btn-lg back-btn-container"><i className="bi bi-arrow-left"></i></button>
                    </div>
                </div>
                <div className="col-xl-3">

                </div>
            </div>
        </div>
    )
}

export default Projects
